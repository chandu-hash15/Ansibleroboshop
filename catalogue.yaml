- name: creating catalogue
  hosts: catalogue
  become: yes
  tasks: 
  - name: disabling nodejs
    ansible.builtin.command: dnf module disable nodejs -y
  
  - name: enabling nodejs
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install nodejs
    ansible.builtin.package:
      name: nodejs
      state: present

  - name: Add the system user roboshop'
    ansible.builtin.user:
      name: roboshop
      comment: roboshop system user
      system: true
      shell: /sbin/nologin
      home: /app

  - name: Create a directory if it does not exist
    ansible.builtin.file:
      state: directory
      path: /app
  
  - name: download catalogue app
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip
      dest: /tmp/catalogue.zip

  - name: unzip the downloaded file
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes

  - name: Install dependices
    community.general.npm:
      path: /app

  - name: copying catalogue.service to /etc/systemd/system/catalogue.service
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service
 
  - name: copying mongo.repo file to /etc/yum.repos.d/mongo.repo
    ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo 

  - name: install mongodb client
    ansible.builtin.package:
      name: mongodb-mongosh
      state: present

  - name: connect to monodb client
    ansible.builtin.command: mongosh mongodb.mitha.fun --quiet --eval "db.getMongo().getDBNames().indexOf('catalogue')"
    register: catalogue_output

  - name: print catalogue ec2_output
    ansible.builtin.debug:
      msg: "{{ catalogue_output }}"

  - name: load products into mongodb
    ansible.builtin.shell: mongosh --host mongodb.mitha.fun </app/db/master-data.js
    when: catalogue_output.stdout | int < 0

  - name: daemon reload enable and start
    ansible.builtin.systemd_service:
      name: catalogue
      enabled: true
      state: started
      daemon_reload: true